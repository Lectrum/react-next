// Core
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Parent = () => {
    const [ count, setCount ] = useState(0);

    const _decrement = () => setCount(count - 1);
    const _reset = () => setCount(0);
    const _increment = () => setCount(count + 1);

    useEffect(() => {
        /**
         * –¢–µ–ª–æ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ:
         * - —Ä–µ–Ω–¥–µ—Ä–∞;
         * - –∫–æ–º–º–∏—Ç–∞ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ DOM;
         * - –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –±—Ä–∞—É–∑–µ—Ä–æ–º.
         */
        console.log('‚è≥ useEffect');
        setTimeout(_increment, 1000);
        /**
         * –¢–æ –µ—Å—Ç—å —Ö—É–∫ useEffect –¥–µ–ª–∞–µ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤
         * —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –ø–µ—Ä–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ.
         */
    });

    console.log('üñ• render');

    return (
        <section className = 'example'>
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <div>
                <button onClick = { _decrement }>-</button>
                <button onClick = { _reset }>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick = { _increment }>+</button>
            </div>
        </section>
    );
};

render(<Parent />, document.getElementById('app'));
