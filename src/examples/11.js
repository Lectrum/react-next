/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ useEffect ‚Äî
 * —ç—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–∫–ª–∏—Ä–∏–Ω–≥ —Ç–∞–π–º–µ—Ä–æ–≤ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫.
 */
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Parent = () => {
    const [ count, setCount ] = useState(0);

    const decrement = () => setCount(count - 1);
    const reset = () => setCount(0);
    const increment = () => setCount(count + 1);
    // const increment = () => {
    //     setCount((prevCount) => {
    //         console.log('‚åöÔ∏è setCount, count', count);
    //         console.log('‚åöÔ∏è setCount, prevCount', prevCount);

    //         return prevCount + 1;
    //     });
    // };

    useEffect(() => {
        const timer = setInterval(increment, 1000);

        console.log('‚è≥ useEffect');

        return () => {
            console.log('‚åõÔ∏è –û—á–∏—Å—Ç–∫–∞!');
            clearInterval(timer);
        };
    }, []);

    console.log('üñ• –†–µ–Ω–¥–µ—Ä!', count);

    return (
        <section className = 'counter'>
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <button onClick = { decrement }>-</button>
            <button onClick = { reset }>–û–±–Ω—É–ª–∏—Ç—å</button>
            <button onClick = { increment }>+</button>
        </section>
    );
};

render(<Parent />, document.getElementById('app'));
