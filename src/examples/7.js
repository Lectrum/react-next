// Core
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Counter = () => {
    const [ count, setCount ] = useState(0);

    const decrement = () => setCount(count - 1);
    const reset = () => setCount(0);
    const increment = () => setCount(count + 1);

    useEffect(() => {
        const timer = setTimeout(increment, 1000);

        console.log('‚è≥ useEffect');

        return () => {
            console.log('‚åõÔ∏è –æ—á–∏—Å—Ç–∫–∞!');

            clearTimeout(timer);
        };
        /**
         * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è-–æ—á–∏—Å—Ç–∏—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤ –¥–≤—É—Ö —Å–ª—É—á–∞—è—Ö:
         * 1. –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º —Ä–µ–Ω–¥–µ—Ä–µ: —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –Ω–æ–≤–æ–≥–æ;
         * 2. –ü–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–∑ DOM: —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏.
         *
         * –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ useEffect –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
         * –Ω–æ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, –∞ —Ç–∞–∫–∂–µ
         * –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ.
         *
         * –ü—Ä–∏ —ç—Ç–æ–º, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–≥–æ useEffect
         * –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞–Ω—å—à–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
         */
    });

    console.log('üñ• —Ä–µ–Ω–¥–µ—Ä!');

    return (
        <section className = 'counter'>
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <button onClick = { decrement }>-</button>
            <button onClick = { reset }>–û–±–Ω—É–ª–∏—Ç—å</button>
            <button onClick = { increment }>+</button>
        </section>
    );
};

render(<Counter />, document.getElementById('app'));
