/**
 * –í—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç useEffect —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π.
 * –≠—Ç–æ –º–∞—Å—Å–∏–≤. –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏–π.
 * –ö–æ–ª–ª–±–µ–∫ useEffect –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.
 * –ü—Ä–∏ —ç—Ç–æ–º –∫–æ–ª–ª–±–µ–∫ –≤—Å—ë —Ä–∞–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –∫–∞–∫ –º–∏–Ω–∏–º—É–º:
 * - –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ;
 * - –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–Ω–º–∞—É–Ω—Ç–∏–Ω–≥–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 *
 * –û useEffect —Ç–∞–∫–æ–π —Ñ–æ—Ä–º—ã –º–æ–∂–Ω–æ –¥—É–º–∞—Ç—å,
 * –∫–∞–∫ –æ componentDidMount + componentDidUpdate.
 */
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const getInitialState = () => Number(localStorage.getItem('count')) || 0;

const Counter = () => {
    const [ count1, setCount1 ] = useState(getInitialState);
    const [ count2, setCount2 ] = useState(0);

    useEffect(() => {
        console.log('üì¶ –ó–∞–ø–∏—Å—å –≤ localStorage');
        localStorage.setItem('count', count1);
    }, [ count1 ]);

    return (
        <>
            <section className = 'counter counter-1'>
                <h1>–ü–µ—Ä–≤—ã–π —Å—á—ë—Ç—á–∏–∫: {count1}</h1>
                <button onClick = { () => setCount1(count1 - 1) }>-</button>
                <button onClick = { () => setCount1(0) }>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick = { () => setCount1(count1 + 1) }>+</button>
            </section>
            <section className = 'counter counter-2'>
                <h1>–í—Ç–æ—Ä–æ–π —Å—á—ë—Ç—á–∏–∫: {count2}</h1>
                <button onClick = { () => setCount2(count2 - 1) }>-</button>
                <button onClick = { () => setCount2(0) }>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick = { () => setCount2(count2 + 1) }>+</button>
            </section>
        </>
    );
};

render(<Counter />, document.getElementById('app'));
