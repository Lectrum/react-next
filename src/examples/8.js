// Core
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Parent = () => {
    const [ count1, setCount1 ] = useState(
        () => Number(localStorage.getItem('count')) || 0,
    );
    const [ count2, setCount2 ] = useState(0);

    const _increment1 = () => setCount1(count1 + 1);
    const _reset1 = () => setCount1(0);
    const _decrement1 = () => setCount1(count1 - 1);

    const _increment2 = () => setCount2(count2 + 1);
    const _reset2 = () => setCount2(0);
    const _decrement2 = () => setCount2(count2 - 1);

    /**
     * –ö–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç, –æ useEffect –º–æ–∂–Ω–æ –¥—É–º–∞—Ç—å,
     * –∫–∞–∫ –æ componentDidMount + componentDidUpdate.
     */
    useEffect(
        () => {
            console.log('‚Üí –ó–∞–ø–∏—Å—å –≤ localStorage üöú');
            localStorage.setItem('count', count1);
        },
        [ count1 ], // –í—ã–∑—ã–≤–∞–µ—Ç useEffect —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å.
    );

    /**
     * –ò–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç useEffect ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±
     * –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.
     */

    return (
        <section className = 'example'>
            <h1>First count: {count1}</h1>
            <div>
                <button onClick = { _increment1 }>+</button>
                <button onClick = { _reset1 }>Reset</button>
                <button onClick = { _decrement1 }>-</button>
            </div>
            <h1>Second count: {count2}</h1>
            <div>
                <button onClick = { _increment2 }>+</button>
                <button onClick = { _reset2 }>Reset</button>
                <button onClick = { _decrement2 }>-</button>
            </div>
        </section>
    );
};

render(<Parent />, document.getElementById('app'));
