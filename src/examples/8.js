// Core
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const getInitialState = () => Number(localStorage.getItem('count')) || 0;

const Counter = () => {
    /* ‚Üì –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º —É React ‚Üì */
    const [ count1, setCount1 ] = useState(getInitialState); /* (1) —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è—á–µ–π–∫–∏ –ø–∞–º—è—Ç–∏ [1] */
    const [ count2, setCount2 ] = useState(0);               /* (2) —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è—á–µ–π–∫–∏ –ø–∞–º—è—Ç–∏ [1, 2] */

    /**
     * –û useEffect —Ç–∞–∫–æ–π —Ñ–æ—Ä–º—ã –º–æ–∂–Ω–æ –¥—É–º–∞—Ç—å,
     * –∫–∞–∫ –æ componentDidMount + componentDidUpdate.
     */
    useEffect(//                                             /* (3) —Å–∞–π–¥-—ç—Ñ—Ñ–µ–∫—Ç: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è—á–µ–π–∫–∏ –ø–∞–º—è—Ç–∏ [1, 2, 3] */
        () => {                                              /* (4) —Ç–µ–ª–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞ —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ DOM */
            console.log('üì¶ –ó–∞–ø–∏—Å—å –≤ localStorage');
            localStorage.setItem('count', count1);
        },
        [ count1 ] /** –í—ã–ø–æ–ª–Ω—è–µ—Ç useEffect —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å. */,
    );
    /**
     * –ò–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç useEffect ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±
     * –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.
     */

    return (
        <>
            <section className = 'counter counter-1'>
                <h1>–ü–µ—Ä–≤—ã–π —Å—á—ë—Ç—á–∏–∫: {count1}</h1>
                <button onClick = { () => setCount1(count1 - 1) }>-</button>
                <button onClick = { () => setCount1(0) }>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick = { () => setCount1(count1 + 1) }>+</button>
            </section>
            <section className = 'counter counter-2'>
                <h1>–í—Ç–æ—Ä–æ–π —Å—á—ë—Ç—á–∏–∫: {count2}</h1>
                <button onClick = { () => setCount2(count2 - 1) }>-</button>
                <button onClick = { () => setCount2(0) }>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick = { () => setCount2(count2 + 1) }>+</button>
            </section>
        </>
    );
};

render(<Counter />, document.getElementById('app'));
